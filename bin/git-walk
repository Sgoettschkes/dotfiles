#!/bin/bash

# File managed by Sgoettschkes/dotfiles
# Do not change

set -o nounset
set -o errexit

# Helpers for printing stuff
success () { printf "\e[32m$1\e[39m\n"; }
warning () { printf "\e[33m$1\e[39m\n"; }
error () { printf "\e[31m$1\e[39m\n"; }

main () {
    local readonly Action=${1:-next}

    local readonly GitBaseDir=`git rev-parse --show-toplevel`
    local readonly WalkFile="${GitBaseDir}/.git/walk"

    if [ "${Action}" == "start" ]; then
        if [ -f ${WalkFile} ]; then
            error "git walk was not stopped properly. Run git walk stop"
            exit 1
        fi

        local readonly Target=${2:-HEAD}
        git rev-list ${Target}..HEAD > ${WalkFile}
        git checkout ${Target}
    elif [ "${Action}" == "next" ]; then
        if [ ! -f ${WalkFile} ]; then
            error "git walk was not startet properly. Run git walk start HASH"
            exit 1
        fi

        local readonly Target=`tail -n 1 ${WalkFile}`
        sed -i '$ d' ${WalkFile}
        git checkout ${Target}
    elif [ "${Action}" == "prev" ]; then
        if [ ! -f ${WalkFile} ]; then
            error "git walk was not startet properly. Run git walk start HASH"
            exit 1
        fi

        git rev-list HEAD^1..HEAD >> $WalkFile
        git checkout HEAD^1
    elif [ "${Action}" == "stop" ]; then
        if [ ! -f ${WalkFile} ]; then
            error "git walk was not startet properly. Run git walk start HASH"
            exit 1
        fi

        rm ${WalkFile}
        git checkout master
    fi
}

main "$@"
